name: Nightly Build

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      run_performance_tests:
        description: 'Run performance tests'
        required: false
        default: 'true'
        type: boolean

env:
  JAVA_VERSION: '17'

jobs:
  nightly-full-test:
    name: Nightly Full Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Full CI pipeline
      run: make ci

    - name: Extended integration tests
      run: |
        echo "Running extended integration tests..."
        # Run all integration tests with longer timeouts
        cd Testcontainers && mvn test -Dtest="*Test" -Dmaven.test.failure.ignore=true
        cd ../OracleTrigger && mvn test -Dtest="*Test" -Dmaven.test.failure.ignore=true
        cd ../withcontext-coroutines && mvn test -Dtest="*Test" -Dmaven.test.failure.ignore=true

    - name: Performance tests
      if: github.event.inputs.run_performance_tests == 'true' || github.event_name == 'schedule'
      run: |
        echo "Running performance tests..."
        cd withcontext-coroutines
        mvn test -Dtest="*IntegrationTest" -Dmaven.test.failure.ignore=true

    - name: Dependency vulnerability scan
      run: |
        echo "Running comprehensive dependency scan..."
        mvn org.owasp:dependency-check-maven:check -Dformat=ALL || echo "Vulnerability scan completed"

    - name: Generate comprehensive reports
      run: |
        echo "Generating comprehensive test reports..."
        make test-report

    - name: Upload nightly results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nightly-results-${{ github.run_number }}
        path: |
          **/target/surefire-reports/
          **/target/site/
          **/target/dependency-check-report.html
        retention-days: 30

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `ðŸš¨ Nightly Build Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `## Nightly Build Failure Report
            
            **Run ID**: ${context.runId}
            **Workflow**: ${context.workflow}
            **Commit**: ${context.sha}
            
            The nightly build has failed. Please check the logs and fix any issues.
            
            ### Quick Actions
            - Check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - Review recent commits for potential issues
            - Run \`make health\` locally to diagnose
            
            This issue will be automatically closed when the nightly build passes again.`,
            labels: ['bug', 'nightly-build', 'automated']
          });
          
          console.log(`Created issue #${issue.data.number}`);

  dependency-update-check:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    - name: Check for dependency updates
      run: |
        echo "Checking for dependency updates..."
        mvn versions:display-dependency-updates > dependency-updates.txt
        mvn versions:display-plugin-updates > plugin-updates.txt

    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-updates-${{ github.run_number }}
        path: |
          dependency-updates.txt
          plugin-updates.txt
        retention-days: 7

    - name: Create dependency update issue
      if: github.event_name == 'schedule'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let dependencyUpdates = '';
          let pluginUpdates = '';
          
          try {
            dependencyUpdates = fs.readFileSync('dependency-updates.txt', 'utf8');
            pluginUpdates = fs.readFileSync('plugin-updates.txt', 'utf8');
          } catch (error) {
            console.log('Could not read update files:', error);
            return;
          }
          
          const hasUpdates = dependencyUpdates.includes('The following dependencies') || 
                           pluginUpdates.includes('The following plugin updates');
          
          if (hasUpdates) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ“¦ Dependency Updates Available - ${new Date().toISOString().split('T')[0]}`,
              body: `## Dependency Update Report
              
              New dependency and plugin updates are available.
              
              ### How to Update
              1. Review the changes in the nightly build artifacts
              2. Update versions in \`pom.xml\` files
              3. Test thoroughly before merging
              4. Run \`make test\` to ensure compatibility
              
              ### Automated Check
              This issue is created automatically by the nightly build.
              Download the full reports from the workflow artifacts.`,
              labels: ['dependencies', 'maintenance', 'automated']
            });
          }

  cleanup-old-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          const thirtyDaysAgo = new Date();
          thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
          
          for (const artifact of artifacts.data.artifacts) {
            const createdAt = new Date(artifact.created_at);
            if (createdAt < thirtyDaysAgo) {
              console.log(`Deleting artifact: ${artifact.name} (${artifact.created_at})`);
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
            }
          }